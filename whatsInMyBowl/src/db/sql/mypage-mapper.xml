<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>

	<entry key="selectOrderList">
		SELECT
		       ORDER_CODE
		     , ORDER_AMOUNT
		     , ORDER_COMPANY
		     , ORDER_INVOICE
		     , ORDER_STATUS
		     , ORDER_DATE
		     , CU_NAME
		     , CU_MAINIMG
		     , P_NAME
		     , P_MAINIMG
		     , PM_TOTALCOST
		  FROM "ORDER" OD
		  JOIN SUBORDER USING (ORDER_CODE)
		  JOIN PAYMENT USING (PM_CODE)
		  LEFT JOIN CUSTOM USING (CU_CODE)
		  LEFT JOIN PRODUCT USING (P_CODE)
		 WHERE OD.M_CODE = ?
           AND ORDER_DATE BETWEEN (SYSDATE - 30) AND SYSDATE
	</entry>
	
	<entry key="orderStatus1">
		SELECT
		       COUNT(ORDER_STATUS) "COUNT"
		  FROM "ORDER"
		 WHERE ORDER_STATUS = '결제대기'
		   AND ORDER_DATE BETWEEN (SYSDATE - 30) AND SYSDATE
		   AND M_CODE = ?
	</entry>
	
	<entry key="orderStatus2">
		SELECT
		       COUNT(ORDER_STATUS) "COUNT"
		  FROM "ORDER"
		 WHERE ORDER_STATUS = '결제완료'
		   AND ORDER_DATE BETWEEN (SYSDATE - 30) AND SYSDATE
		   AND M_CODE = ?
	</entry>
	
	<entry key="orderStatus3">
		SELECT
		       COUNT(ORDER_STATUS) "COUNT"
		  FROM "ORDER"
		 WHERE ORDER_STATUS = '배송준비'
		   AND ORDER_DATE BETWEEN (SYSDATE - 30) AND SYSDATE
		   AND M_CODE = ?
	</entry>
	
	<entry key="orderStatus4">
		SELECT
		       COUNT(ORDER_STATUS) "COUNT"
		  FROM "ORDER"
		 WHERE ORDER_STATUS = '배송중'
		   AND ORDER_DATE BETWEEN (SYSDATE - 30) AND SYSDATE
		   AND M_CODE = ?
	</entry>
	
	<entry key="orderStatus5">
		SELECT
		       COUNT(ORDER_STATUS) "COUNT"
		  FROM "ORDER"
		 WHERE ORDER_STATUS = '배송완료'
		   AND ORDER_DATE BETWEEN (SYSDATE - 30) AND SYSDATE
		   AND M_CODE = ?
	</entry>

	<entry key="selectInquiryList">
		SELECT
		        I_CODE
		      , M.M_NAME 
		      , I_TITLE
		      , I_CATEGORY
		      , I_DATE
		      , I_ANSWER
		  FROM INQUIRY I
		LEFT JOIN MEMBER M ON (I.M_CODE = M.M_CODE)
		 ORDER
		    BY I_CODE DESC
	</entry>
	
	<entry key="deleteInquiryList">
	UPDATE
	        INQUIRY
	    SET STATUS = 'N'
	 WHERE I_CODE = ?
	</entry>
	
	
	<entry key="orderListDetail">
		SELECT
		       ORDER_CODE
		     , ORDER_AMOUNT
		     , ORDER_COMPANY
		     , ORDER_INVOICE
		     , ORDER_STATUS
		     , ORDER_DATE
		     , CU_NAME
		     , CU_MAINIMG
		     , P_NAME
		     , P_MAINIMG
		     , PM_TOTALCOST
		     , PM_CODE
		  FROM "ORDER" OD
		  JOIN SUBORDER USING (ORDER_CODE)
		  JOIN PAYMENT USING (PM_CODE)
		  LEFT JOIN CUSTOM USING (CU_CODE)
		  LEFT JOIN PRODUCT USING (P_CODE)
		 WHERE OD.M_CODE = ?
		 AND ORDER_DATE BETWEEN ? AND ?
	</entry>
	
	<entry key="insertCancel">
		INSERT
		  INTO CANCELATION
		  (
		    CANCEL_CODE
		  , ORDER_CODE
		  , PM_CODE
		  )
		  VALUES
		  (
		    'CAN'||SEQ_CANCEL.NEXTVAL
		  , ?
		  , ?
		  )
	</entry>
	
	<entry key="updateCancel">
		UPDATE
		       "ORDER"
		   SET ORDER_STATUS = '주문취소'
		 WHERE ORDER_CODE = ?
	</entry>
	
	<entry key="insertRefund">
		INSERT
		  INTO REFUND
		  (
		    RE_CODE
		  , ORDER_CODE
		  , PM_CODE
		  , RE_REASON
		  )
		  VALUES
		  (
		    'RE'||SEQ_REFUND.NEXTVAL
		  , ?
		  , ?
		  , ?
		  )
	</entry>
	
	<entry key="updateRefund">
		UPDATE
		       "ORDER"
		   SET ORDER_STATUS = '제품환불'
		 WHERE ORDER_CODE = ?
	</entry>
	
	<entry key="selectCancelList">
		SELECT
		       ORDER_CODE
		     , ORDER_AMOUNT
		     , ORDER_STATUS
		     , ORDER_DATE
		     , CU_NAME
		     , CU_MAINIMG
		     , P_NAME
		     , P_MAINIMG
		     , PM_TOTALCOST
             , PM_FINALCOST
             , CANCEL_CODE
             , CANCEL_STATUS
             , CANCEL_COMPLETEMENT
             , RE_CODE
             , RE_STATUS
             , RE_COMPLETEMENT
		  FROM "ORDER" OD
		  JOIN SUBORDER USING (ORDER_CODE)
		  JOIN PAYMENT USING (PM_CODE)
          LEFT JOIN CANCELATION USING (ORDER_CODE)
          LEFT JOIN REFUND USING (ORDER_CODE)
		  LEFT JOIN CUSTOM USING (CU_CODE)
		  LEFT JOIN PRODUCT USING (P_CODE)
		 WHERE OD.M_CODE = ?
		   AND ORDER_DATE BETWEEN ? AND ?
		   AND (ORDER_STATUS = '제품환불' OR ORDER_STATUS = '주문취소')
	</entry>
	
	<entry key="selectRCDetail">
		SELECT
		       ORDER_CODE
		     , ORDER_AMOUNT
		     , ORDER_STATUS
		     , ORDER_DATE
		     , CU_NAME
		     , CU_MAINIMG
		     , P_NAME
		     , P_MAINIMG
		     , PM_TOTALCOST
             , PM_FINALCOST
             , CANCEL_CODE
             , CANCEL_STATUS
             , CANCEL_COMPLETEMENT
             , CANCEL_REASON
             , RE_CODE
             , RE_STATUS
             , RE_COMPLETEMENT
             , RE_REASON
		  FROM "ORDER" OD
		  JOIN SUBORDER USING (ORDER_CODE)
		  JOIN PAYMENT USING (PM_CODE)
          LEFT JOIN CANCELATION USING (ORDER_CODE)
          LEFT JOIN REFUND USING (ORDER_CODE)
		  LEFT JOIN CUSTOM USING (CU_CODE)
		  LEFT JOIN PRODUCT USING (P_CODE)
		 WHERE ORDER_CODE = ?
	</entry>
	
	<entry key="selectHeart">
		SELECT
		       M_CODE
		     , P_CODE
		     , P_NAME
		     , P_MAINIMG
		     , P_PROVIDEPRICE
		  FROM HEART
		  JOIN PRODUCT USING (P_CODE) 
		 WHERE M_CODE = ?
	</entry>
	
	<entry key="deleteHeart">
		DELETE 
		       HEART
		WHERE M_CODE = ?
		  AND P_CODE = ?
	</entry>
	
	<entry key="heartToCart">
		INSERT
		  INTO CART
		  (
		    M_CODE
		  , CA_CATEGORY
		  , CA_CODE
		  , CA_AMOUNT
		  )
		  VALUES
		  (
		    ?
		  , 'P'
		  , ?
		  , 1
		  )
	</entry>
	
	<entry key="selectListCount">
		SELECT
		       COUNT(*)"COUNT"
		  FROM "ORDER"
	</entry>
	
	<entry key="adminOrderList">
		SELECT *
		  FROM (
		        SELECT ROWNUM RNUM, A.*
		          FROM (
		                SELECT 
					           ORDER_CODE
					         , OD.M_CODE
					         , PM_CODE
					         , ORDER_AMOUNT
					         , ORDER_NAME
					         , ORDER_ADDRESS
					         , ORDER_SUBADDRESS
					         , ORDER_ZIPCODE
					         , ORDER_PHONE
					         , ORDER_EMAIL
					         , ORDER_REQUEST
					         , ORDER_POINT
					         , NVL(ORDER_COMPANY, '-') COMPANY 
					         , NVL(ORDER_INVOICE, '-') INVOICE
					         , ORDER_STATUS
					         , ORDER_DATE
					         , P_CODE
					         , P_NAME
					         , CU_CODE
					         , CU_NAME
					         , PM_TOTALCOST
					         , PM_FINALCOST
					         , PM_METHOD
					 FROM "ORDER" OD
					 JOIN PAYMENT USING (PM_CODE)
					 JOIN SUBORDER USING (ORDER_CODE)
					 LEFT JOIN CUSTOM USING (CU_CODE)
					 LEFT JOIN PRODUCT USING (P_CODE)
					ORDER 
					   BY ORDER_CODE ASC
		                ) A
		        )
		  WHERE RNUM BETWEEN ? AND ?
	</entry>
	
	<entry key="adminOrderDetail">
		SELECT 
		        ORDER_CODE
		      , ORDER_DATE
		      , ORDER_NAME
		      , ORDER_PHONE
		      , ORDER_EMAIL
		      , ORDER_ZIPCODE
		      , ORDER_ADDRESS
		      , ORDER_SUBADDRESS
		      , ORDER_REQUEST
		      , ORDER_POINT
		      , NVL(ORDER_COMPANY, '-') COMPANY 
	          , NVL(ORDER_INVOICE, '-') INVOICE
		      , P_CODE
		      , P_NAME
		      , CU_CODE
		      , CU_NAME
		   FROM "ORDER"
		   JOIN SUBORDER USING ("ORDER_CODE")
		   LEFT JOIN CUSTOM USING (CU_CODE)
		   LEFT JOIN PRODUCT USING (P_CODE)
		  WHERE ORDER_CODE = ?
	</entry>
	
	<entry key="insertPost">
		UPDATE
		       "ORDER"
	       SET ORDER_COMPANY = ?
	         , ORDER_INVOICE = ?
	     WHERE ORDER_CODE = ?
	</entry>
	
	<entry key="searchOrder">
		SELECT 
		       ORDER_CODE
		     , OD.M_CODE
		     , PM_CODE
		     , ORDER_AMOUNT
		     , ORDER_NAME
		     , ORDER_ADDRESS
		     , ORDER_SUBADDRESS
		     , ORDER_ZIPCODE
		     , ORDER_PHONE
		     , ORDER_EMAIL
		     , ORDER_REQUEST
		     , ORDER_POINT
		     , NVL(ORDER_COMPANY, '-') COMPANY 
		     , NVL(ORDER_INVOICE, '-') INVOICE
		     , ORDER_STATUS
		     , ORDER_DATE
		     , P_CODE
		     , P_NAME
		     , CU_CODE
		     , CU_NAME
		     , PM_TOTALCOST
		     , PM_FINALCOST
		     , PM_METHOD
		FROM "ORDER" OD
		JOIN PAYMENT USING (PM_CODE)
		JOIN SUBORDER USING (ORDER_CODE)
		LEFT JOIN CUSTOM USING (CU_CODE)
		LEFT JOIN PRODUCT USING (P_CODE)
		WHERE ? LIKE ?;
		ORDER 
		BY ORDER_CODE ASC;
	</entry>
</properties>